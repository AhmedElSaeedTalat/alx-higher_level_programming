test for lazy_matrix_mul
----------------------

import file
-----------
>>> lazy_matrix_mul = __import__("101-lazy_matrix_mul").lazy_matrix_mul

case 1:
-------------------
>>> print(lazy_matrix_mul([[1, 2], [3, 4]], [[1, 2], [3, 4]]))
[[ 7 10]
 [15 22]]

case 2:
-------------------
>>> print(lazy_matrix_mul([[1, 2]], [[3, 4], [5, 6]]))
[[13 16]]

case not all same size:
-------------------
>>> print(lazy_matrix_mul([[1]], [[3, 4], [5, 6]]))
Traceback (most recent call last):
    ...
ValueError: shapes (1,1) and (2,2) not aligned: 1 (dim 1) != 2 (dim 0)

case None instead of integer:
-------------------
>>> print(lazy_matrix_mul([[1, None]], [[3, 4], [5, 6]]))
Traceback (most recent call last):
    ...
TypeError: unsupported operand type(s) for *: 'NoneType' and 'int'

case string in a list:
-------------------
>>> print(lazy_matrix_mul([[1, 2]], [[3, 'string'], [5, 6]]))
Traceback (most recent call last):
    ...
ValueError: data type must provide an itemsize

case string in a list:
-------------------
>>> print(lazy_matrix_mul([[1, 2], [3, 1]], 'string'))
Traceback (most recent call last):
    ...
TypeError: ufunc 'multiply' did not contain a loop with signature matching types dtype('<U6') dtype('<U6') dtype('<U6')

case string in a list:
-------------------
>>> print(lazy_matrix_mul('string', [[5, 6], [7, 8]]))
Traceback (most recent call last):
    ...
TypeError: ufunc 'multiply' did not contain a loop with signature matching types dtype('<U6') dtype('<U6') dtype('<U6')

case string in a list:
-------------------
>>> print(lazy_matrix_mul([[1, 2]], [[3, -5], [5, 6]]))
[[13  7]]

case missgin one argument:
-------------------
>>> print(lazy_matrix_mul([[3, 4], [5, 6]]))
Traceback (most recent call last):
    ...
TypeError: lazy_matrix_mul() missing 1 required positional argument: 'm_b'

case missgin 2 argument:
-------------------
>>> print(lazy_matrix_mul())
Traceback (most recent call last):
    ...
TypeError: lazy_matrix_mul() missing 2 required positional arguments: 'm_a' and 'm_b'
